Welcome to the RSBAC python packages directory
----------------------------------------------

rsbac-python is RSBAC userland tools, but in pure python
This project is in developpement.


Directories layout
------------------

contrib                 external contributions are welcome
main                    project code sources
|->/tools               new tools to replace rsbac-admin's commands
|->/libs/rsbac          shared code between tools
|        |->/types      RSBAC generated types for helpers
|        |->/helpers    librsbac.so wrapper
|        \->/tools      the usual toolbox
\->/docs                notes, doxygen outputs


Key concepts
------------

* RSBAC api, to shortcut the good old C userland tool:
	- types generator from rsbac legacy headers:
		jail_flags = { "allow-dev-read": 512, ...}
	- rsbac_binding.py: a module to interface the librsbac.so with ctypes:
		def rsbac_jail(rootdir = None, ip = "0.0.0.0", jail_flags = 0, max_caps = [0, 0],
				scd_get = 0, scd_modify = 0):

* run-jail:
	- auto-jailling feature with symlinks
	- jail configuration in plain text, imported from adamantix project


Security policy description
---------------------------

* generic syntax, xml or .ini style, featuring:
	- Manager for names to id (creation if it does not exist):
		Rc_Type["BIN_FD"]
	- RC role template inheritance
		apache_role (tcp_server, var-run-daemon, ...)
	- RC type callback, a role can register a callback on new rc type creation
		ie: secoff (READ/MODIFY ATTRIBUTES), datoff (READ)

* default security policy:
	- provide description, ala sec-policy/* in gentoo portage
	- ready to use


New userland tools
------------------

* create_policy, a tool to generate a standalone policy.xml
	- use help from rsbac learning modes output
	- GUI (tkInter, pyopengl, whatever...)
	- strace like learning mode

* load_policy, a tool to apply a policy
	- check for package update, and reapply inode attributes
	- could be called in package's postinstall


Bonus tools
-----------

* util-linux with rsbac attributes awarness:
	- ps, ls, id, who, htop
	- Show attributes name, not numbers

* legacy userland tools rewrite in python
	- attr_get_*, attr_set_*, ...
	- smaller code, better error handling

* daemontools startup scripts and default policy for standard packages (sec-policy/selinux-*):
	- supervise can be control by a simple file, making service administration easer:
		- low environment polution
		- user controlable even without rsbac
		- restart on crash
	- generic hardened auto configuration if it does not exist.

